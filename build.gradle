plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.br'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'


    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DevTools (somente para dev)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testes
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.3'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.6.3'
}

test {
    def customMongoDBEmbeddedVersionProperty = "custom.mongodb.embedded.version"
    def customMongoDBEmbeddedVersion = "4.6.3"

    if (System.getProperty("os.name").toLowerCase().contains("windows")) {
        customMongoDBEmbeddedVersion = "5.0.5"
    }

    systemProperty customMongoDBEmbeddedVersionProperty, customMongoDBEmbeddedVersion
    print "> Set property '${customMongoDBEmbeddedVersionProperty}' with value: '${customMongoDBEmbeddedVersion}'"

    // Define propriedade para habilitar testes locais
    if (!System.getenv().containsKey("GITHUB_ACTIONS")) {
        systemProperty "ambiente", "local"
    }

    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}
