name: PR Workflow

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission
        run: chmod +x gradlew

      - name: Build project (without tests)
        run: ./gradlew clean assemble

      - name: Upload Gradle problems report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-problems-report
          path: build/reports/problems/

  test-controller:
    name: Controller Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - run: sudo apt-get update && sudo apt-get install -y libssl-dev libcurl4-openssl-dev
      - run: ./gradlew test --tests "*Controller*" -Dspring.profiles.active=test
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-test-report-controller
          path: build/reports/

  test-service:
    name: Service Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - run: sudo apt-get update && sudo apt-get install -y libssl-dev libcurl4-openssl-dev
      - run: ./gradlew test --tests "*Service*" -Dspring.profiles.active=test
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-test-report-service
          path: build/reports/

  test-repository:
    name: Repository Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - run: sudo apt-get update && sudo apt-get install -y libssl-dev libcurl4-openssl-dev
      - run: ./gradlew test --tests "*Repository*" -Dspring.profiles.active=test
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-test-report-repository
          path: build/reports/

    lint-check:
      name: Lint Check
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: actions/checkout@v2

        - name: Set up JDK 21
          uses: actions/setup-java@v4
          with:
            distribution: 'corretto'
            java-version: '21'

        - name: Run lint check (checkstyle or other tool)
          run: ./gradlew checkstyleMain checkstyleTest

        - name: Upload lint reports
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: checkstyle-reports
            path: build/reports/checkstyle/

    docker-build:
      name: Docker Build
      runs-on: ubuntu-latest
      needs: [ test-integration, lint-check ]
      steps:
        - uses: actions/checkout@v2

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Build Docker image
          run: |
            docker build -t financas-pessoais:pr-${{ github.event.pull_request.number }} .

    deploy-preview:
      name: Deploy Preview (Simulado)
      runs-on: ubuntu-latest
      needs: docker-build
      steps:
        - uses: actions/checkout@v2

        - name: Simulate Deploy Preview
          run: echo "ðŸ”§ Este job simula o deploy da aplicaÃ§Ã£o para preview (como Render, Railway, etc)"

